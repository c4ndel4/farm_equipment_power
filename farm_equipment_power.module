<?php

/**
 * @file
 * Equipment Power module.
 */

use Drupal\Core\Entity\ContentEntityInterface;
use Drupal\Core\Field\FieldStorageDefinitionInterface;
use Drupal\Core\Entity\EntityTypeInterface;


/**
 * Power type options helper.
 *
 * @return array
 *   Returns an array of power types for use in form select options.
 */
function farm_equipment_power_power_type_options() {
  /** @var \Drupal\farm_equipment_power\Entity\FarmPowerTypeInterface[] $types */
  $types = \Drupal::entityTypeManager()->getStorage('power_type')->loadMultiple();
  $options = [];
  foreach ($types as $id => $type) {
    $options[$id] = $type->getLabel();
  }
  return $options;
}

/**
 * Allowed values callback function for the power type field.
 *
 * @param \Drupal\Core\Field\FieldStorageDefinitionInterface $definition
 *   The field definition.
 * @param \Drupal\Core\Entity\ContentEntityInterface|null $entity
 *   The entity being created if applicable.
 * @param bool $cacheable
 *   Boolean indicating if the allowed values can be cached. Defaults to TRUE.
 *
 * @return array
 *   Returns an array of allowed values for use in form select options.
 */
function farm_equipment_power_power_type_field_allowed_values(FieldStorageDefinitionInterface $definition, ContentEntityInterface $entity = NULL, bool &$cacheable = TRUE) {
  return farm_equipment_power_power_type_options();
}

/**
 * Implements hook_farm_entity_bundle_field_info().
 */
function farm_equipment_power_farm_entity_bundle_field_info(EntityTypeInterface $entity_type, $bundle) {
  $fields = [];

  // Add an Power Type reference field to Equipment.
  if ($entity_type->id() == 'asset' && $bundle == 'equipment') {

    // is_powered boolean field.
    $options = [
      'type' => 'boolean',
      'label' => t('Is powered'),
      'description' => t('If this equipment is powered, then it can have a power type'),
      'weight' => [
      'form' => -50,
      ],
    ];
    $fields['is_powered'] = \Drupal::service('farm_field.factory')->baseFieldDefinition($options);

    $options = [
        'type' => 'list_string',
        'label' => t('Power source'),
        'allowed_values_function' => 'farm_equipment_power_power_type_field_allowed_values',
        'required' => TRUE,
        'weight' => [
          'form' => -50,
          'view' => -50,
        ],
    ];
    $fields['power_type'] = \Drupal::service('farm_field.factory')->bundleFieldDefinition($options);
  }

  return $fields;
}